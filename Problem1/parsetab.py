
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EA58166E1CD1B2D22EA254CBC409664D'
    
_lr_action_items = {'QUOTE':([0,2,3,5,7,8,10,11,14,15,16,18,20,21,22,23,29,30,],[1,-17,-18,-21,-19,-16,-23,-22,1,-5,1,1,-11,-13,-12,-10,-6,-15,]),'$end':([0,2,3,5,6,7,8,9,10,11,12,13,15,29,30,34,],[-20,-17,-18,-21,-2,-19,-16,-4,-23,-22,0,-1,-5,-6,-15,-3,]),'NUM':([0,2,3,5,7,8,10,11,14,15,16,18,20,21,22,23,29,30,31,],[3,-17,-18,-21,-19,-16,-23,-22,3,-5,3,3,-11,-13,-12,-10,-6,-15,33,]),'LPAREN':([0,1,2,3,5,7,8,10,11,14,15,16,17,18,20,21,22,23,27,29,30,35,],[4,14,-17,-18,-21,-19,-16,-23,-22,19,-5,19,26,19,-11,-13,-12,-10,19,-6,-15,-14,]),'TRUE':([0,2,3,5,7,8,10,11,14,15,16,18,20,21,22,23,29,30,],[5,-17,-18,-21,-19,-16,-23,-22,5,-5,5,5,-11,-13,-12,-10,-6,-15,]),'TEXT':([0,2,3,5,7,8,10,11,14,15,16,18,20,21,22,23,29,30,],[7,-17,-18,-21,-19,-16,-23,-22,7,-5,7,7,-11,-13,-12,-10,-6,-15,]),'RPAREN':([2,3,5,7,8,10,11,14,15,16,18,20,21,22,23,24,25,28,29,30,32,33,],[-17,-18,-21,-19,-16,-23,-22,-9,-5,-9,-9,-11,-8,-12,-10,29,30,-7,-6,-15,34,35,]),'SIMB':([0,2,3,4,5,7,8,10,11,14,15,16,18,19,20,21,22,23,26,29,30,],[8,-17,-18,16,-21,-19,-16,-23,-22,8,-5,8,8,16,-11,-13,-12,-10,31,-6,-15,]),'NIL':([0,2,3,5,7,8,10,11,14,15,16,18,20,21,22,23,29,30,],[10,-17,-18,-21,-19,-16,-23,-22,10,-5,10,10,-11,-13,-12,-10,-6,-15,]),'FALSE':([0,2,3,5,7,8,10,11,14,15,16,18,20,21,22,23,29,30,],[11,-17,-18,-21,-19,-16,-23,-22,11,-5,11,11,-11,-13,-12,-10,-6,-15,]),'LET':([4,],[17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'item':([14,16,18,],[18,18,18,]),'bool':([0,14,16,18,],[2,2,2,2,]),'quoted_list':([0,14,16,18,],[6,20,20,20,]),'list':([1,],[15,]),'empty':([14,16,18,],[21,21,21,]),'call':([0,14,16,18,27,],[9,22,22,22,32,]),'letexp':([17,],[27,]),'exp':([0,],[12,]),'atom':([0,14,16,18,],[13,23,23,23,]),'items':([14,16,18,],[24,25,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> atom','exp',1,'p_exp_atom','yacc.py',151),
  ('exp -> quoted_list','exp',1,'p_exp_qlist','yacc.py',155),
  ('exp -> LPAREN LET letexp call RPAREN','exp',5,'p_exp_let','yacc.py',159),
  ('exp -> call','exp',1,'p_exp_call','yacc.py',164),
  ('quoted_list -> QUOTE list','quoted_list',2,'p_quoted_list','yacc.py',170),
  ('list -> LPAREN items RPAREN','list',3,'p_list','yacc.py',174),
  ('items -> item items','items',2,'p_items','yacc.py',178),
  ('items -> empty','items',1,'p_items_empty','yacc.py',182),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',186),
  ('item -> atom','item',1,'p_item_atom','yacc.py',190),
  ('item -> quoted_list','item',1,'p_item_list','yacc.py',198),
  ('item -> call','item',1,'p_item_call','yacc.py',202),
  ('item -> empty','item',1,'p_item_empty','yacc.py',206),
  ('letexp -> LPAREN SIMB NUM RPAREN','letexp',4,'p_letexp','yacc.py',216),
  ('call -> LPAREN SIMB items RPAREN','call',4,'p_call','yacc.py',221),
  ('atom -> SIMB','atom',1,'p_atom_simbol','yacc.py',226),
  ('atom -> bool','atom',1,'p_atom_bool','yacc.py',230),
  ('atom -> NUM','atom',1,'p_atom_num','yacc.py',234),
  ('atom -> TEXT','atom',1,'p_atom_word','yacc.py',238),
  ('atom -> <empty>','atom',0,'p_atom_empty','yacc.py',242),
  ('bool -> TRUE','bool',1,'p_true','yacc.py',246),
  ('bool -> FALSE','bool',1,'p_false','yacc.py',250),
  ('atom -> NIL','atom',1,'p_nil','yacc.py',254),
]
